filter {
  if [fields][owner] == "sample" and [fields][service] == "proxy"{
    grok {
        patterns_dir => "/etc/logstash/patterns"
        match => { "message" => "%{haproxy}" }
        #patterns => { "%{NUMBER:request_body_byte:integer}" }
        remove_field => "message"
    }
    mutate {
      remove_tag => ["_grokparsefailure"]
      remove_tag => ["beats_input_raw_event"]
      remove_tag => ["_geoip_lookup_failure"]
      #remove_field => [ "%[beat][version]" ]
    }

    geoip {
      target => "geoip"
      source => "client_ip"
      add_tag => [ "geoip" ]
      database => "/usr/share/logstash/GeoLite2-City.mmdb"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]

        # Remove the redundant information displayed by geoip
      remove_field => ["[geoip][latitude]", "[geoip][longitude]", "[geoip][country_code]", "[geoip][country_code2]", "[geoip][country_code3]", "[geoip][timezone]", "[geoip][continent_code]", "[geoip][region_code]"]
    }
    mutate {
        convert => [ "[geoip][coordinates]", "float" ]
    }

  }
}

output {
if [fields][owner] == "sample" and [fields][service] == "proxy" {
elasticsearch {
    hosts => ['localhost:9200']
    index => "sample-proxy-%{+YYYY.MM.dd}"
    user => 'changeme'
    password => 'changeme'
       }
    }
}
